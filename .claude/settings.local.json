{
  "permissions": {
    "allow": [
      "Bash(npm run build)",
      "Bash(npm install --save-dev @types/pg)",
      "Bash(npm install pg)",
      "Bash(curl -s http://localhost:3000)",
      "Bash(curl -s http://localhost:3000/games)",
      "Bash(psql \"postgresql://postgres:mkzYUwOIMzDrOMFTLeRUlxLXtQsIQmST@shuttle.proxy.rlwy.net:38585/railway\" -c \"\nCREATE TABLE IF NOT EXISTS staff_list (\n  staff_id VARCHAR(50) PRIMARY KEY,\n  staff_name VARCHAR(255) NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE INDEX IF NOT EXISTS idx_staff_name ON staff_list(staff_name);\n\nCOMMENT ON TABLE staff_list IS ''Cache of staff members from Airtable Staff table. Synced daily via POST /api/staff-list/sync'';\n\")",
      "Bash(node scripts/create-staff-table.js)",
      "Bash(curl -X POST http://localhost:3002/api/staff-list/sync)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<''EOF''\nv1.3.0 - Major feature release: Play Log System, Staff Game Knowledge, Toast Notifications\n\n### Added\n- **Play Log System** - Staff can log when games are played\n  - ðŸ“Š Floating button overlay on game cards (staff-only, mobile-friendly)\n  - Play Log dialog with Session Date/Time (defaults to now) and optional Notes\n  - Duplicate detection: Blocks if any staff logged same game within 1 hour\n  - Toast notifications showing \"Successfully logged [Game Name]\" on /games page\n  - PostgreSQL caching for fast duplicate detection\n  - Automatic cache cleanup for play logs older than 1 hour\n\n- **Staff Game Knowledge System** - Track and share game knowledge\n  - \"Add Knowledge\" button in game detail modal (staff-only)\n  - Dialog with fields: Confidence Level, Was Taught By (dropdown), Notes\n  - Confidence Levels: Beginner, Intermediate, Expert, Instructor\n  - Confirmation popup for Expert/Instructor levels\n  - Staff Game Knowledge page with updated filters and columns\n\n- **Staff List Caching** - PostgreSQL cache for Airtable staff members\n  - staff_list table in PostgreSQL synced daily from Airtable\n  - Fast dropdown population (no Airtable API call per dialog open)\n  - GitHub Actions workflow for daily cron job at 2 AM UTC\n\n- **Toast Notification System** - Global toast notifications\n  - ToastProvider context for managing notifications\n  - ToastContainer component with auto-dismiss (3 seconds)\n  - Success/Error/Info toast types with appropriate icons\n\n### Changed\n- Enhanced event propagation handling in dialogs\n- Staff Game Knowledge table layout adjusted for \"Was Taught By\" column\n- Play log time calculation now uses PostgreSQL EXTRACT(EPOCH) for accuracy\n- Renamed \"Game Expert Tracker\" to \"Bulk Knowledge Updater\"\n- Added view toggle (Images/List) to Bulk Knowledge Updater\n- Moved Bulk Knowledge Updater to sub-menu under Staff Knowledge in hamburger menu\n\n### Fixed\n- Mobile click handling on radio buttons in dialogs (removed hover tooltips)\n- Dialog closing unexpectedly after confirming Expert/Instructor level\n- Play log time calculations showing incorrect minutes ago\n- Staff list showing only existing members instead of full Staff table\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git checkout -b staging)",
      "Bash(git push -u origin staging)",
      "Bash(git add CLAUDE.md CHANGELOG.md)",
      "Bash(git commit -m \"docs: Update CLAUDE.md and CHANGELOG.md to document staging branch workflow\n\n- Updated ''Before Any Git Push'' section with critical staging-first workflow\n- Added new ''Branch Strategy'' section explaining two-branch deployment model\n- Clarified that ONLY ''push to main'' instruction triggers production deployment\n- Added deployment strategy header to CHANGELOG.md\n- Documented that all changes (minor/major) must go to staging first\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git push origin staging)",
      "Bash(git add Dockerfile)",
      "Bash(git commit -m \"fix: Switch to node:20-slim to avoid Docker Hub registry issues\n\nnode:20-alpine has been unreliable with Docker Hub 500 errors.\nSwitching to node:20-slim (Debian-based) which has better cache\ncoverage and is more reliable. ~30MB larger but stable.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(curl -s -I https://registry-1.docker.io/v2/)",
      "Bash(curl -s -I https://auth.docker.io/token)",
      "Bash(curl -s -I https://api.airtable.com/v0/meta/bases)",
      "Bash(curl -s https://status.docker.com/)",
      "Bash(curl -s https://status.airtable.com/)",
      "Bash(curl -s -I https://registry-1.docker.io/v2/library/node/manifests/20-slim)",
      "Bash(curl -s -I https://registry-1.docker.io/v2/library/node/manifests/20-alpine)",
      "Bash(taskkill /F /IM node.exe)",
      "Bash(curl -s -X POST http://localhost:3001/api/staff/verify-email )",
      "Bash(curl -s -X POST http://localhost:3001/api/staff/verify-email -H \"Content-Type: application/json\" -d '{\"\"\"\"email\"\"\"\":\"\"\"\"brendonganle@gmail.com\"\"\"\"}')",
      "Bash(git commit -m \"$(cat <<''EOF''\nv1.3.3 - Fix: Store staff_type in StaffLoginDialog component\n\nFixed critical bug where staff_type was not stored when logging in\nthrough the StaffLoginDialog component (modal on /games page). The \nsignin page was storing it correctly, but the dialog was missing this line.\n\nNow both authentication paths store the staff_type field from Airtable,\nallowing both admin users to correctly show as (admin) regardless of \nwhich login method they use:\n- Direct signin at /auth/signin âœ“\n- Staff login dialog on /games page âœ“\n\nAdmin users (Type=\"Admin\" in Airtable) now have full access to:\nâœ“ Edit Game button (red) - edit all game fields\nâœ“ Add Boardgame button - add new games\nâœ“ Play Log delete/edit controls\nâœ“ Staff Knowledge delete/edit controls\nâœ“ Correct (admin) badge in staff menu (purple)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nv1.3.4 - Fix: Correct Play Logs API to use proper base IDs\n\n### Fixed\n- **Play Logs API Base ID Correction**: Play Logs table is in SNP Games List base, not Sip N Play base\n  - GET /api/play-logs: Now queries correct base (AIRTABLE_GAMES_BASE_ID)\n  - POST /api/play-logs: Creates records in correct base\n  - DELETE /api/play-logs: Deletes from correct base\n  - PATCH /api/play-logs: Updates records in correct base\n  \n- **Type Safety**: Fixed Next.js 15 route handler params Promise type\n  - app/api/games/[id]/edit/route.ts: Updated params type to Promise<{ id: string }>\n  \n- **TypeScript Compilation**: Fixed type errors in EditGameDialog.tsx\n  - Proper type assertions for parseInt() operations\n\nThis resolves the \"Record ID does not exist\" error when creating play logs.\nThe Play Logs table exists in SNP Games List base (apppFvSDh2JBc0qAu),\nwhile the Staff table exists in Sip N Play base (appjD3LJhXYjp0tXm).\nBoth bases are now correctly referenced in the API.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
